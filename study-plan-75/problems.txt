Array/String:
1768-merge-strings-alternatively (two-pointers)
1071-greatest-common-divisor-of-strings (common-factors problem)
1431-kid-with-greatest-number-of-candies (trivial greedy array problem)
605-can-place-flowers (trivial greedy array problem)
345-reverse-vowels-of-a-string (trivial two-pointers problem)
151-reverse-words-in-string, (revisited, pythonic solution is trivial, in-place solution was somewhat hard - a more successful approach was writing tests for each helper function)
238-product-of-array-except-self (a problem with a trick one has to know or reason out to solve within the question constraints, and again to adapt it into an O(1) extra space solution)
334-increasing-triplet-subsequence (problem with a greedy one-pass answer - another answer that is so obvious in hindsight, with a big (but not necessary) hint from the answer being to use a/b to track values instead of indices)
443-string-compression (mostly-easy two-pointers problem)

Two-pointers:
283-move-zeros (our two pointers solutions is slow, and answer is faster) (problem is also (now) in '_revisit')
392-is-subsequence (easy as a two-pointers problem (however there are also recursive, hashmap, and dynamic-programming bottom-up/top-down solutions)) (two-pointers, recursive, and hashmap solutions are greedy (check if any subsequence can be found) (fast), while DP solutions are not and are slow in comparison)
11-container-with-most-water (greedy two-pointers problem)

